name: CI
on:
  # - pull_request
  - push

jobs:
  Test:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-latest
          - macos-latest
          # - ubuntu-latest # https://github.com/ldc-developers/ldc/issues/3780
        d:
          - "ldc-beta"
        node:
          - 16
        pnpm:
          - 6
        clang:
          - 12
        include:
          # dmd
          - os: ubuntu-latest
            d: dmd-latest
            node: 16
            pnpm: 6
    steps:
      - uses: actions/checkout@v2

      # Cache
      - name: Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.dub
            ~/AppData/Local/dub
            ~/.pnpm-store
            D:\.pnpm-store
            ./.dub
            ./llvm
            C:/Program Files/LLVM
          key: "cache-D:${{ matrix.d }}-OS:${{ matrix.os }}-Clang:${{ matrix.clang }}"

      # Setup compilers and tools

      - name: Setup LLVM
        if: contains(matrix.os, 'ubuntu') && matrix.clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: ${{ matrix.clang }}
          cached: ${{ steps.cache.outputs.cache-hit }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Setup Pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ matrix.pnpm }}

      - name: Setup D
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.d }}

      # Build and Test

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build.node

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./dist
